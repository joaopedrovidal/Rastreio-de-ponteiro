<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36" version="24.7.12">
  <diagram name="Página-1" id="0u5dHsHv0Xk-yz8tGGaA">
    <mxGraphModel dx="2620" dy="975" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-1" value="&lt;p style=&quot;margin: 12px 0px; color: rgb(45, 59, 69); font-family: LatoWeb, &amp;quot;Lato Extended&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;strong style=&quot;font-weight: bold;&quot;&gt;Exercício 1&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin: 12px 0px; color: rgb(45, 59, 69); font-family: LatoWeb, &amp;quot;Lato Extended&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;Dadas as declarações abaixo, apresente o valor dos itens a seguir, supondo que o tamanho do tipo inteiro e do tipo float seja de 4 bytes:&lt;/p&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209); color: rgb(45, 59, 69); font-family: LatoWeb, &amp;quot;Lato Extended&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;p style=&quot;margin: 12px 0px 0px; font-size: 1rem; font-weight: 300; line-height: 25px;&quot;&gt;int x = 10, *px = &amp;amp;x, **ppx = &amp;amp;px;&lt;br&gt;float y = 5.9, *py = &amp;amp;y, **ppy = &amp;amp;py;&lt;/p&gt;&lt;/blockquote&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="134" width="560" height="190" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-2" value="10" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="80" y="200" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-3" value="5,9" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="200" y="200" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-4" value="6DFEEC" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="320" y="200" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-5" value="6DFEE0" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="440" y="200" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-6" value="6DFEDC" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="560" y="200" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-8" value="X" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="90" y="170" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-9" value="Y" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="210" y="170" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-10" value="PX" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="330" y="170" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-11" value="PY" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="450" y="170" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-12" value="PPX" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="690" y="170" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-13" value="6DFEE8" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="680" y="200" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-14" value="PPY" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="570" y="170" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-16" value="6DFEEC" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="90" y="240" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-17" value="6DFEE0" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="210" y="240" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-18" value="6DFEE8" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="330" y="240" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-19" value="6DFEDC" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="450" y="240" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-20" value="6DFED8" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="570" y="240" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-21" value="6DFEE4" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="690" y="240" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-22" value="&lt;table border=&quot;1&quot; style=&quot;max-width: 100%; background-color: rgb(255, 255, 255); border-collapse: collapse; border-spacing: 0px; color: rgb(45, 59, 69); font-family: LatoWeb, &amp;quot;Lato Extended&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 740.812px; height: 232px;&quot;&gt;&lt;tbody&gt;&lt;tr style=&quot;height: 29px;&quot;&gt;&lt;/tr&gt;&lt;tr style=&quot;height: 29px;&quot;&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;a) x= 10&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;i) &amp;amp;x = 6DFEEC&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.625px; height: 29px;&quot;&gt;q) &amp;amp;ppx = 6DFEE4&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;height: 29px;&quot;&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;b) *py =5,9&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;j) py+1 = 6DFEE4&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.625px; height: 29px;&quot;&gt;r) &amp;amp;ppy = 6DFED8&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;height: 29px;&quot;&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;c) px = 6DFEEC&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;k) *px-1 = 6&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.625px; height: 29px;&quot;&gt;s) &amp;amp;px = 6DFEE8&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;height: 29px;&quot;&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;d) &amp;amp;y = 6DFEE0&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;l) **ppy = 5,9&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.625px; height: 29px;&quot;&gt;t) &amp;amp;py = 6DFEDC&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;height: 29px;&quot;&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;e) *px = 10&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;m) &amp;amp;ppy = 6DFED8&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.625px; height: 29px;&quot;&gt;u) ppx = 6DFEE8&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;height: 29px;&quot;&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;f) y = 5,9&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;n) *&amp;amp;px = 6DFEE8&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.625px; height: 29px;&quot;&gt;v) ppy = 6DFEDC&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;height: 29px;&quot;&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;g)*ppx = 10&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;o) (**ppx)+1 = 14&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.625px; height: 29px;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;height: 29px;&quot;&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;h) py = 6DFEE0&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 241.594px; height: 29px;&quot;&gt;p) px+1 = 6DFEF0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="44" y="270" width="740" height="300" as="geometry" />
        </mxCell>
        <mxCell id="_AfvjTb8BOW-xYDOSJKi-23" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;Rastreio&lt;/span&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;1 - Em primeiro instante o desenvolvedor adiciona as bibliotecas e depois a utilização do &quot;using namespace std;&quot; para diminuir a verbosidade do cout;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;2 - Depois, o programador declara a função main onde estará alocado toda a estrutura do sistema;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;3 - Na estrutura ele começa declarando as variáveis com e sem ponteiro do tipo inteiro;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;4 - O vet recebe malloc e sizeof, o sizeof seria 4 bytes, por ser um INTEIRO, multiplicando por 10, chegamos ao resultado de vet = 40;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;5 - Se o valor do vet for NULL, o sistema exibe na tela um erro retornando 1. Isso ocorre, quando o valor é nulo ou estoura a memória do sistema;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;6 - Um for é iniciado percorrendo de 0 até 9 incrementando de 1 em 1, a cada incremento o sistema realiza um conta que quer dizer que o valor do índice que o vetor percorre naquele momento, será o resultado de i * 2 + 1;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/h1&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;7 - Após realizar essa conta e alocar o valor na posição do vetor, o sistema exibe o valor do índice atual;&lt;/font&gt;&lt;/h1&gt;&lt;div&gt;&lt;font style=&quot;font-size: 13px; background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;h1 style=&quot;margin-top: 0px; font-size: 13px;&quot;&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;8 - O ponteiro &lt;code&gt;ptr1&lt;/code&gt; é inicializado para apontar para o início do vetor &lt;code&gt;vet&lt;/code&gt;. Em seguida, o valor da posição apontada por &lt;code&gt;ptr1&lt;/code&gt; é modificado para &lt;code&gt;445&lt;/code&gt;. Isso significa que &lt;code&gt;vet[0]&lt;/code&gt; agora vale &lt;code&gt;445&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;9 - O ponteiro &lt;code&gt;ptr1&lt;/code&gt; é incrementado em 5 posições, fazendo com que ele aponte para &lt;code&gt;vet[5]&lt;/code&gt;, e o valor apontado por &lt;code&gt;ptr1&lt;/code&gt; é alterado para &lt;code&gt;854&lt;/code&gt;. Portanto, &lt;code&gt;vet[5]&lt;/code&gt; agora vale &lt;code&gt;854&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;10 - O ponteiro &lt;code&gt;ptr2&lt;/code&gt; é inicializado para apontar para o endereço de &lt;code&gt;vet[8]&lt;/code&gt;. Depois, ele é decrementado em uma posição, fazendo com que ele aponte para &lt;code&gt;vet[7]&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;11 - O valor apontado por &lt;code&gt;ptr2&lt;/code&gt;, ou seja, &lt;code&gt;vet[7]&lt;/code&gt;, é decrementado em 1. Se antes o valor de &lt;code&gt;vet[7]&lt;/code&gt; era &lt;code&gt;15&lt;/code&gt; (calculado no loop), agora ele passa a ser &lt;code&gt;14&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;12 - O valor da posição &lt;code&gt;vet[3]&lt;/code&gt; é modificado diretamente para &lt;code&gt;186&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;13 - O ponteiro duplo &lt;code&gt;ptr3&lt;/code&gt; é inicializado para apontar para &lt;code&gt;ptr2&lt;/code&gt;. Como &lt;code&gt;ptr2&lt;/code&gt; aponta para &lt;code&gt;vet[7]&lt;/code&gt;, &lt;code&gt;*ptr3&lt;/code&gt; também aponta para &lt;code&gt;vet[7]&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;14 - &lt;code&gt;*ptr3&lt;/code&gt; é incrementado em 1 posição, o que faz com que ele aponte para &lt;code&gt;vet[8]&lt;/code&gt;. O valor dessa posição (&lt;code&gt;vet[8]&lt;/code&gt;) é alterado para &lt;code&gt;203&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;15 - O ponteiro &lt;code&gt;ptr2&lt;/code&gt; é decrementado em 2 posições, o que faz com que ele aponte para &lt;code&gt;vet[5]&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;16 - O valor apontado por &lt;code&gt;ptr2&lt;/code&gt;, ou seja, &lt;code&gt;vet[5]&lt;/code&gt;, é modificado para &lt;code&gt;204&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;17 - O ponteiro duplo &lt;code&gt;*ptr3&lt;/code&gt; é decrementado em 2 posições, fazendo com que ele aponte para &lt;code&gt;vet[6]&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;18 - O valor apontado por &lt;code&gt;**ptr3&lt;/code&gt;, ou seja, &lt;code&gt;vet[6]&lt;/code&gt;, é incrementado em 1.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;19 - Finalmente, um novo loop &lt;code&gt;for&lt;/code&gt; imprime todos os valores de &lt;code&gt;vet&lt;/code&gt;, mostrando as modificações feitas ao longo do programa.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;20 - O vetor &lt;code&gt;vet&lt;/code&gt; é liberado da memória com a função &lt;code&gt;free(vet)&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 250, 250);&quot;&gt;21 - O programa finaliza e exibe uma pausa na tela com &lt;code style=&quot;&quot;&gt;system(&quot;pause&quot;)&lt;/code&gt;, aguardando o usuário pressionar uma tecla para encerrar o programa.&lt;/span&gt;&lt;/p&gt;&lt;/h1&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="44" y="590" width="746" height="1310" as="geometry" />
        </mxCell>
        <mxCell id="EaJuRav2K17SGERnCKLC-1" value="&lt;p style=&quot;margin: 12px 0px; color: rgb(45, 59, 69); font-family: LatoWeb, &amp;quot;Lato Extended&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;Exercício 3&lt;br&gt;Nesse exercício deve ser realizado um rastreio de código fonte. Atenção: sua resposta deve conter o passo a passo do rastreio de cada código fonte a seguir. Posteriormente o algoritmo pode ser colocado no computador para se conferir o resultado:&lt;/p&gt;&lt;table border=&quot;1&quot; style=&quot;max-width: 100%; background-color: rgb(255, 255, 255); border-collapse: collapse; border-spacing: 0px; color: rgb(45, 59, 69); font-family: LatoWeb, &amp;quot;Lato Extended&amp;quot;, Lato, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; width: 1683.61px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding: 2px; width: 555.859px;&quot;&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;char x;&lt;br&gt;int i;&lt;br&gt;x =&#39;c&#39;;&lt;br&gt;i = 5;&lt;br&gt;x = x + i;&amp;nbsp;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// X = H&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;printf(&quot;%c&quot;, x); // H&lt;/blockquote&gt;&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 555.859px;&quot;&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;int a, *b, *c;&lt;br&gt;a = 20;&lt;br&gt;b = &amp;amp;a;&amp;nbsp;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;b = // 6DFEEC&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;c = b;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;c = 6DFEEC&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;a = (*b + *c) % 7;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;a = // 40 % 7 = 5&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;printf(&quot;%d&quot;, a);&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&amp;nbsp;// 5&lt;/blockquote&gt;&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 555.891px;&quot;&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;int a, b, c, *d;&lt;br&gt;a = 2;&lt;br&gt;b = 3;&lt;br&gt;d = &amp;amp;a;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;d = 6DFEE0&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;c = a * (*d) + b;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;c = 7&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;printf(&quot;%d&quot;, c); // 7&lt;/blockquote&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;padding: 2px; width: 555.859px;&quot;&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;//Supondo endereço de x:6356748&lt;br&gt;//Supondo endereço de p:6356744&lt;br&gt;//Supondo endereço de pp:6356740&lt;br&gt;//O tamanho de cada inteiro é de 4 bytes&lt;br&gt;//O tamanho de cada ponteiro é de 4 bytes&lt;br&gt;int x, *p, **pp;&lt;br&gt;x = 1;&lt;br&gt;p = &amp;amp;x;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;p = 6356748&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;pp = &amp;amp;p;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;pp =&amp;nbsp; 6356744&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;for(int i=0;i&amp;lt;3; i++)&lt;br&gt;x = *p + **pp;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&amp;nbsp;//&amp;nbsp; 1 + 1&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;printf (&quot;%d&quot;, **pp);&amp;nbsp;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// 2&lt;/blockquote&gt;&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 555.859px;&quot;&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;//Supondo endereço de x: 6356748&lt;br&gt;//Supondo endereço de p: 6356744&lt;br&gt;//Supondo endereço de pp: 6356740&lt;br&gt;//O tamanho de cada inteiro é de 4 bytes&lt;br&gt;//O tamanho de cada ponteiro é de 4 bytes&lt;br&gt;int x, *p, **pp;&lt;br&gt;x = 5;&lt;br&gt;p = &amp;amp;x;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;p = 6356748&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;// pp = &amp;amp;p;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// pp = 6356744&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;**pp = *p + 1;&lt;br&gt;printf(&quot;%X&quot;, pp); //6356744&lt;/blockquote&gt;&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 555.891px;&quot;&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;int a[5]= {10,20,30,40,50};&lt;br&gt;int *b, **c;&lt;br&gt;b = a;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// b = 10&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;c = &amp;amp;b;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;c = enedereço de b&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;*c = *c + 3;&lt;br&gt;printf(&quot;%d&quot;,*b); // 40&lt;/blockquote&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;padding: 2px; width: 555.859px;&quot;&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;int a[5]=&lt;br&gt;{10,20,30,40,50};&lt;br&gt;int *b, **c;&lt;br&gt;b = a;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// b = 10&amp;nbsp;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;c = &amp;amp;b;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;c = endereço de b&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;*c = *c + 3;&lt;br&gt;printf(&quot;%d&quot;,*(b + 1)); // 50&lt;/blockquote&gt;&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 555.859px;&quot;&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;int a[5]= {10,20,30,40,50};&lt;br&gt;int *b, **c;&lt;br&gt;b = (a+3);&amp;nbsp;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// b = 40&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;b--;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// b = 30&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;printf(&quot;%d&quot;,*b);&amp;nbsp; // 30&lt;/blockquote&gt;&lt;/td&gt;&lt;td style=&quot;padding: 2px; width: 555.891px;&quot;&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;int i, *vet, *ptr;&lt;br&gt;vet = (int*) malloc(sizeof(int)*10);&lt;br&gt;for(i = 0; i &amp;lt; 10; i++)&lt;br&gt;&amp;nbsp; &amp;nbsp; vet[i] = i * 2 + 1;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [0] = 1&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [1] = 3&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [2] = 5&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [3] = 7&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [4] = 9&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [5] = 11&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [6] = 13&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [7] = 15&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [8] = 17&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// vet [9] = 19&amp;nbsp;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;&lt;br&gt;ptr = vet;&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;// ptr = 1&lt;/blockquote&gt;&lt;blockquote style=&quot;padding: 0px 0px 0px 15px; margin: 0px 0px 20px; border-left: 5px solid rgb(199, 205, 209);&quot;&gt;printf(&quot;%d&quot;,*(ptr + 3)); // 7&lt;/blockquote&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-431" y="1920" width="1690" height="640" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
